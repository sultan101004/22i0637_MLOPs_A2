apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  namespace: microservices
  labels:
    app: frontend
    tier: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: frontend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: frontend
        tier: frontend
    spec:
      containers:
      - name: frontend
        image: frontend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
          name: http
        env:
        - name: REACT_APP_AUTH_SERVICE_URL
          value: "http://localhost:30001"
        - name: REACT_APP_BACKEND_SERVICE_URL
          value: "http://localhost:30000"
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3

---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: microservices
  labels:
    app: frontend
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30080
    protocol: TCP
    name: http
  selector:
    app: frontend

---
# Additional NodePort services for direct access to backend services
apiVersion: v1
kind: Service
metadata:
  name: auth-service-nodeport
  namespace: microservices
  labels:
    app: auth-service
spec:
  type: NodePort
  ports:
  - port: 3001
    targetPort: 3001
    nodePort: 30001
    protocol: TCP
    name: http
  selector:
    app: auth-service

---
apiVersion: v1
kind: Service
metadata:
  name: backend-service-nodeport
  namespace: microservices
  labels:
    app: backend
spec:
  type: NodePort
  ports:
  - port: 5000
    targetPort: 5000
    nodePort: 30000
    protocol: TCP
    name: http
  selector:
    app: backend

